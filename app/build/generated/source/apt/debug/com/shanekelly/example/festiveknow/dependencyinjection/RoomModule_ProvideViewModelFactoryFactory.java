// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.shanekelly.example.festiveknow.dependencyinjection;

import androidx.lifecycle.ViewModelProvider;
import com.shanekelly.example.festiveknow.data.ListItemRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class RoomModule_ProvideViewModelFactoryFactory
    implements Factory<ViewModelProvider.Factory> {
  private final RoomModule module;

  private final Provider<ListItemRepository> repositoryProvider;

  public RoomModule_ProvideViewModelFactoryFactory(
      RoomModule module, Provider<ListItemRepository> repositoryProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ViewModelProvider.Factory get() {
    return Preconditions.checkNotNull(
        module.provideViewModelFactory(repositoryProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ViewModelProvider.Factory> create(
      RoomModule module, Provider<ListItemRepository> repositoryProvider) {
    return new RoomModule_ProvideViewModelFactoryFactory(module, repositoryProvider);
  }

  public static ViewModelProvider.Factory proxyProvideViewModelFactory(
      RoomModule instance, ListItemRepository repository) {
    return instance.provideViewModelFactory(repository);
  }
}
